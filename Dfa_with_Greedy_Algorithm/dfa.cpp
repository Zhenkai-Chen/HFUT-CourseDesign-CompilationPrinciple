#include <cstdlib>
#include <iostream>
#include <string>
#include <assert.h>
#include <stdio.h>
using namespace std;
//===================全局变量======================================//
char      c[100];                               //预定缓存空间存放字符串 
int       i = 0, j = 0, lenth = 0, p = 1;               //获取字符串信息 
int       T1[100], T2[100];                      //识别出的字符起始标志与结束标志 
string    T3[100];                              //存储获取的字符串相应的词形 
string    state[3] = { "a", "a*bb*", "abb" };          //词形
//===================函数声明======================================//
void      clear();                              //初始化缓存 
void      getlength();                          //获取字符串长度 
void      search();                             //匹配最长字符 
void      output();                            //输出 
void      initial_state_1();                      //六个输入状态转移函数 
void      initial_state_2();
void      initial_state_3();
void      initial_state_4();
void      initial_state_5();
void      initial_state_6();
//===================模拟初始化缓存空间============================//
void  clear()                        
{
    for ( int q = 0; q < 100; q++ )
    {
        c[q] = '\n' ;
        T1[q] = 101 ;
        T2[q] = 101 ;
    }
    
}
//====================获取字符串的长度============================//
void  getlength()                          
{
    for ( int q = 0; q < 100; q++ )
        if ( c[q] != '\n' )
           lenth = lenth + 1;
        else
        {
           lenth = lenth - 2;	//因为'#'、'\n'各占一个长度单位
           return;
        }
}
//==================六个输入状态转移函数=========================//
//------------------------状态一---------------------------------// 
void   initial_state_1()
{
     if ( c[i] == '#' )	//搜索结束
     {
         T2[j]--;
         return;
     }
     if ( c[i] == 'a' )	//扫描到'a'
     {
         T1[j] = i;	//因为是初态，所以字符串起始、结束标志都相同
         T2[j] = i;
         ++i;	//预备读入下一个字符
         T3[j] = state[0];	//此时字符串相应词形为'a'
         initial_state_2();	//进入状态2
     }
     else	//扫描到'b'
     {
         T1[j] = i;	//因为是初态，所以字符串起始标志都相同
         T2[j] = i; 
         ++i;	//预备读入下一个字符
         T3[j] = state[1];	//此时字符串相应词形为'a*bb*'
         initial_state_3();	//进入状态3
     }
}
//-------------------------状态二---------------------------------//
void   initial_state_2()
{
       if ( c[i] == '#' )	//搜索结束
     {
         return;
     }
       if ( c[i] == 'a' )	//扫描到'a'
       {
           ++i;	//预备读入下一个字符
           T2[j] = i;	//字符串结束标志物刷新
           T3[j] = state[0];	//此时字符串词形为'a'
           if ( c[i] == '#' )	//说明输入的字符串是'aa#'
             for ( i = i-2; i < lenth; i++ )
             {
                  T1[j] = i;	//第二个'a'的起始与终止标志位相同
                  T2[j] = i;
                  T3[j] = state[0];	//词形为'a'
                  j++;	//准备搜索下一个字符串
             }
             initial_state_4();	//还有输入，不是'aa#'，进入状态4
       }
       else	//扫描到'b'
       {
          ++i;	//让字符串结束标志位+1
          T2[j] = i;	//字符串结束标志物刷新
          T3[j] = state[1];	//此时字符串词形为'a*bb*'
          initial_state_5(); //进入状态5
     }
}
//---------------------------状态三--------------------------------//
void   initial_state_3()
{
     if ( c[i] == '#' )	//搜索结束
     {
         T2[j]--;
         return;
     }
     if  (c[i] == 'a' )	//扫描到'a'
     {
         T2[j] = i - 1;	//结束标志位刷新
         T3[j] = state[1];	//此时字符串词形为'a*bb*'
         j++;	//准备搜索下一个字符串
     }
     else	//扫描到'b'
     {
         ++i;	//预备读入下一个字符
         T2[j] = i;	//字符串结束标志物刷新
         initial_state_3();	//进入状态3
     }
}
//------------------状态四-------------------------------//
void   initial_state_4()
{
     if ( c[i] == '#' )	//搜索结束
     {
         T2[j]--;
         return;
     }
     if ( c[i] == 'a' )	//扫描到'a'
     {
         ++i;	//预备读入下一个字符
         T2[j] = i;	//字符串结束标志物刷新
         p++;	//这个'p'用来表示在状态4扫描了几个'a'，一开始为1是因为只有状态2读入了'a'才能进入状态4
         if ( c[i] == '#' )	//说明输入的字符串是'aaa#'
         {
              for ( i = i-p-1; i < lenth; i++ )
             {
                  T1[j] = i;	//第三个'a'的起始与终止标志位相同
                  T2[j] = i;
                  T3[j] = state[0];	//词形为'a'
                  j++;	//准备搜索下一个字符串
             }
        }
        initial_state_4();	//进入状态4

     }
     else	//扫描到'b'
     {
        p = 1;	//重置'a'数量信息位为1
        ++i;	//预备读入下一个字符
        T2[j] = i;	//字符串结束标志物刷新
        T3[j] = state[1];	//此时字符串词形为'a*bb*'
        initial_state_3();	//进入状态3
     }
}
//-------------------状态五-------------------------------//
void   initial_state_5()
{
     if ( c[i] == '#' )	//搜索结束
     {
         T2[j]--;
         return;
     }
     if ( c[i] == 'a' )	//扫描到'a'
     {
         T2[j] = i-1;	//结束标志位刷新
         T3[j] = state[1];	//此时字符串词形为'a*bb*'
         j++;	//准备搜索下一个字符串
     }
     else	//扫描到'b'
     {
         i++;	//预备输出此字符串'abb'
         T2[j] = i;	//字符串结束标志物刷新
         T3[j] = state[2];	//此时字符串词形为'abb'
        initial_state_6();	//进入状态6
     }
}
//----------------------状态六-------------------------------//
void   initial_state_6()
{
     if ( c[i] == '#' )	//搜索结束
     {
         T2[j]--;
         return;
     }
     if ( c[i] == 'a' )	//扫描到'a'
     {
         T2[j] = i-1;	//结束标志位刷新
         T3[j] = state[2];	//此时字符串词形为'abb'
         j++;	//准备搜索下一个字符串
     }
     else	//扫描到'b'
     {
         i++;	//预备输出此字符串'a*bb*'
         T2[j] = i;	//结束标志位刷新
         T3[j] = state[1];	//此时字符串词形为'a*bb*'
         initial_state_3();	//进入状态3
     }
}
//====================匹配函数==============================//
void   search()
{
       while(i<lenth)	//遍历字符串
       {
             initial_state_1();	//从状态1开始工作
       } 
}
//==================输出函数================================//
void   output()
{
      for ( int k = 0; (T1[k] != 101 && T2[k] != 101 ); k++)
     {
           for ( int q = T1[k]; q <= T2[k]; q++)	
                cout << c[q];	//输出字符串
           cout << "   " << T3[k] << endl;	//输出字符串的词形
     }
}
                                
//====================主函数====================//
int    main()
{
       cout << "//=======================================//" << endl;
       cout << "                  编译原理课程设计           " << endl;
       cout << "      第十四题：基于贪心算法的DFA的程序实现  " << endl; 
       cout << "                 姓名：  陈 振 凯            " << endl;
       cout << "                 学号：  2017217856             " << endl;  
       cout << "//========================================//" << endl;
       cout << "请输入一串ab字符并以'#'号结束:" << endl; 
       clear();                              //清空模拟缓存 
       cin.get( &c[0], 100, '\n' );            //读取字符串 
       getlength();                   //获取输入字符串的长度，便于检测 
       cout << "您输入的字符串长度为:" << endl; 
       cout << lenth << endl;               //显示字符串长度 
       search();                           //贪心匹配最长字符串 
       cout << "所识别的所有最大匹配字符串及其词形如下:" << endl; 
       output();                          //对识别出的字符串统一输出 
       clear();                           //运行结束，清空模拟缓存 
       system("PAUSE");
       return EXIT_SUCCESS;
}
